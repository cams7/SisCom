/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.siscom.view;

import br.com.siscom.bean.Cliente;
import br.com.siscom.bean.Endereco;
import br.com.siscom.bean.Telefone;
import java.awt.EventQueue;
import java.beans.Beans;
import java.util.ArrayList;

import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;

import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author cesar
 */
public class ClienteView extends JPanel {

    public ClienteView() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("siscomPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Cliente c order by c.id desc");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        pnlListaClientes = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnNovoCliente = new javax.swing.JButton();
        btnExcluirCliente = new javax.swing.JButton();
        btnEditarCliente = new javax.swing.JButton();
        pnlListaEnderecos = new javax.swing.JPanel();
        detailScrollPane1 = new javax.swing.JScrollPane();
        tblEnderecos = new javax.swing.JTable();
        btnExcluirEndereco = new javax.swing.JButton();
        btnNovoEndereco = new javax.swing.JButton();
        btnEditarEndereco = new javax.swing.JButton();
        pnlListaTelefones = new javax.swing.JPanel();
        detailScrollPane2 = new javax.swing.JScrollPane();
        tblTelefones = new javax.swing.JTable();
        btnExcluirTelefone = new javax.swing.JButton();
        btnEditarTelefone = new javax.swing.JButton();
        btnNovoTelefone = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnConfirmarCliente = new javax.swing.JButton();
        btnCancelarCliente = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        pnlListaClientes.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Clientes"));

        tblClientes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblClientes.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, tblClientes);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nome}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${email}"));
        columnBinding.setColumnName("E-mail");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cpf}"));
        columnBinding.setColumnName("CPF");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rg}"));
        columnBinding.setColumnName("RG");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${orgaoRg}"));
        columnBinding.setColumnName("Órgão expedidor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cnpj}"));
        columnBinding.setColumnName("CNPJ");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nascimento}"));
        columnBinding.setColumnName("Data de nascimento");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${foneReferencia}"));
        columnBinding.setColumnName("Telefone");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${profissao}"));
        columnBinding.setColumnName("Profissão");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${renda}"));
        columnBinding.setColumnName("Renda");
        columnBinding.setColumnClass(Double.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${empresa}"));
        columnBinding.setColumnName("Empresa");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${foneEmpresa}"));
        columnBinding.setColumnName("Tefone da empresa");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${referencia}"));
        columnBinding.setColumnName("Referencia");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(tblClientes);
        if (tblClientes.getColumnModel().getColumnCount() > 0) {
            tblClientes.getColumnModel().getColumn(0).setMinWidth(250);
            tblClientes.getColumnModel().getColumn(1).setMinWidth(200);
            tblClientes.getColumnModel().getColumn(2).setResizable(false);
            tblClientes.getColumnModel().getColumn(2).setPreferredWidth(110);
            tblClientes.getColumnModel().getColumn(3).setResizable(false);
            tblClientes.getColumnModel().getColumn(3).setPreferredWidth(110);
            tblClientes.getColumnModel().getColumn(4).setResizable(false);
            tblClientes.getColumnModel().getColumn(4).setPreferredWidth(110);
            tblClientes.getColumnModel().getColumn(5).setResizable(false);
            tblClientes.getColumnModel().getColumn(5).setPreferredWidth(110);
            tblClientes.getColumnModel().getColumn(6).setResizable(false);
            tblClientes.getColumnModel().getColumn(6).setPreferredWidth(130);
            tblClientes.getColumnModel().getColumn(7).setResizable(false);
            tblClientes.getColumnModel().getColumn(7).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(8).setMinWidth(150);
            tblClientes.getColumnModel().getColumn(9).setResizable(false);
            tblClientes.getColumnModel().getColumn(9).setPreferredWidth(80);
            tblClientes.getColumnModel().getColumn(10).setMinWidth(180);
            tblClientes.getColumnModel().getColumn(11).setResizable(false);
            tblClientes.getColumnModel().getColumn(11).setPreferredWidth(120);
            tblClientes.getColumnModel().getColumn(12).setMinWidth(200);
        }

        btnNovoCliente.setText("Novo Cliente");
        btnNovoCliente.addActionListener(formListener);

        btnExcluirCliente.setText("Excluir Cliente");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblClientes, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btnExcluirCliente, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnExcluirCliente.addActionListener(formListener);

        btnEditarCliente.setText("Editar Cliente");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblClientes, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btnEditarCliente, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnEditarCliente.addActionListener(formListener);

        javax.swing.GroupLayout pnlListaClientesLayout = new javax.swing.GroupLayout(pnlListaClientes);
        pnlListaClientes.setLayout(pnlListaClientesLayout);
        pnlListaClientesLayout.setHorizontalGroup(
            pnlListaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListaClientesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNovoCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluirCliente))
                    .addComponent(masterScrollPane))
                .addContainerGap())
        );

        pnlListaClientesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExcluirCliente, btnNovoCliente});

        pnlListaClientesLayout.setVerticalGroup(
            pnlListaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaClientesLayout.createSequentialGroup()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addGap(17, 17, 17)
                .addGroup(pnlListaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluirCliente)
                    .addComponent(btnNovoCliente)
                    .addComponent(btnEditarCliente))
                .addContainerGap())
        );

        pnlListaEnderecos.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereços do Cliente"));

        tblEnderecos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblEnderecos.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${selectedElement.enderecos}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblClientes, eLProperty, tblEnderecos);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${logradouro}"));
        columnBinding.setColumnName("Logradouro");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bairro}"));
        columnBinding.setColumnName("Bairro");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${complemento}"));
        columnBinding.setColumnName("Complemento");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cep}"));
        columnBinding.setColumnName("CEP");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cidade}"));
        columnBinding.setColumnName("Cidade");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${uf}"));
        columnBinding.setColumnName("UF");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        detailScrollPane1.setViewportView(tblEnderecos);
        if (tblEnderecos.getColumnModel().getColumnCount() > 0) {
            tblEnderecos.getColumnModel().getColumn(0).setMinWidth(350);
            tblEnderecos.getColumnModel().getColumn(1).setMinWidth(300);
            tblEnderecos.getColumnModel().getColumn(2).setMinWidth(200);
            tblEnderecos.getColumnModel().getColumn(3).setMinWidth(110);
            tblEnderecos.getColumnModel().getColumn(4).setMinWidth(250);
            tblEnderecos.getColumnModel().getColumn(5).setResizable(false);
            tblEnderecos.getColumnModel().getColumn(5).setPreferredWidth(30);
        }

        btnExcluirEndereco.setText("Excluir Entereço");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblEnderecos, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btnExcluirEndereco, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnExcluirEndereco.addActionListener(formListener);

        btnNovoEndereco.setText("Novo Endereço");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblClientes, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btnNovoEndereco, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnNovoEndereco.addActionListener(formListener);

        btnEditarEndereco.setText("Editar Endereço");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblEnderecos, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btnEditarEndereco, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnEditarEndereco.addActionListener(formListener);

        javax.swing.GroupLayout pnlListaEnderecosLayout = new javax.swing.GroupLayout(pnlListaEnderecos);
        pnlListaEnderecos.setLayout(pnlListaEnderecosLayout);
        pnlListaEnderecosLayout.setHorizontalGroup(
            pnlListaEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaEnderecosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListaEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListaEnderecosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNovoEndereco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarEndereco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluirEndereco))
                    .addComponent(detailScrollPane1))
                .addContainerGap())
        );

        pnlListaEnderecosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExcluirEndereco, btnNovoEndereco});

        pnlListaEnderecosLayout.setVerticalGroup(
            pnlListaEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaEnderecosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detailScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListaEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluirEndereco)
                    .addComponent(btnNovoEndereco)
                    .addComponent(btnEditarEndereco))
                .addContainerGap())
        );

        pnlListaTelefones.setBorder(javax.swing.BorderFactory.createTitledBorder("Telefones do Cliente"));

        tblTelefones.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblTelefones.getTableHeader().setReorderingAllowed(false);

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${selectedElement.telefones}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblClientes, eLProperty, tblTelefones);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numero}"));
        columnBinding.setColumnName("Numero");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipo}"));
        columnBinding.setColumnName("Tipo");
        columnBinding.setColumnClass(Character.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        detailScrollPane2.setViewportView(tblTelefones);
        if (tblTelefones.getColumnModel().getColumnCount() > 0) {
            tblTelefones.getColumnModel().getColumn(0).setResizable(false);
            tblTelefones.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblTelefones.getColumnModel().getColumn(1).setResizable(false);
            tblTelefones.getColumnModel().getColumn(1).setPreferredWidth(150);
        }

        btnExcluirTelefone.setText("Excluir Telefone");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblTelefones, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btnExcluirTelefone, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnExcluirTelefone.addActionListener(formListener);

        btnEditarTelefone.setText("Editar Telefone");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblTelefones, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btnEditarTelefone, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnEditarTelefone.addActionListener(formListener);

        btnNovoTelefone.setText("Novo Telefone");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblClientes, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btnNovoTelefone, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnNovoTelefone.addActionListener(formListener);

        javax.swing.GroupLayout pnlListaTelefonesLayout = new javax.swing.GroupLayout(pnlListaTelefones);
        pnlListaTelefones.setLayout(pnlListaTelefonesLayout);
        pnlListaTelefonesLayout.setHorizontalGroup(
            pnlListaTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaTelefonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListaTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(detailScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListaTelefonesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNovoTelefone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarTelefone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluirTelefone)))
                .addContainerGap())
        );
        pnlListaTelefonesLayout.setVerticalGroup(
            pnlListaTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaTelefonesLayout.createSequentialGroup()
                .addComponent(detailScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListaTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluirTelefone)
                    .addComponent(btnEditarTelefone)
                    .addComponent(btnNovoTelefone)))
        );

        btnConfirmarCliente.setText("Confirmar Allterações");
        btnConfirmarCliente.addActionListener(formListener);

        btnCancelarCliente.setText("Cancelar Allterações");
        btnCancelarCliente.addActionListener(formListener);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCancelarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmarCliente)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelarCliente)
                    .addComponent(btnConfirmarCliente))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnlListaTelefones, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlListaEnderecos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlListaClientes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlListaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlListaEnderecos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlListaTelefones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == btnNovoCliente) {
                ClienteView.this.btnNovoClienteActionPerformed(evt);
            }
            else if (evt.getSource() == btnExcluirCliente) {
                ClienteView.this.btnExcluirClienteActionPerformed(evt);
            }
            else if (evt.getSource() == btnEditarCliente) {
                ClienteView.this.btnEditarClienteActionPerformed(evt);
            }
            else if (evt.getSource() == btnExcluirEndereco) {
                ClienteView.this.btnExcluirEnderecoActionPerformed(evt);
            }
            else if (evt.getSource() == btnNovoEndereco) {
                ClienteView.this.btnNovoEnderecoActionPerformed(evt);
            }
            else if (evt.getSource() == btnEditarEndereco) {
                ClienteView.this.btnEditarEnderecoActionPerformed(evt);
            }
            else if (evt.getSource() == btnExcluirTelefone) {
                ClienteView.this.btnExcluirTelefoneActionPerformed(evt);
            }
            else if (evt.getSource() == btnEditarTelefone) {
                ClienteView.this.btnEditarTelefoneActionPerformed(evt);
            }
            else if (evt.getSource() == btnNovoTelefone) {
                ClienteView.this.btnNovoTelefoneActionPerformed(evt);
            }
            else if (evt.getSource() == btnConfirmarCliente) {
                ClienteView.this.btnConfirmarClienteActionPerformed(evt);
            }
            else if (evt.getSource() == btnCancelarCliente) {
                ClienteView.this.btnCancelarClienteActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents


    private void btnExcluirEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirEnderecoActionPerformed
        int index = tblClientes.getSelectedRow();
        Cliente cliente = list.get(tblClientes.convertRowIndexToModel(index));
        Collection<Endereco> enderecos = cliente.getEnderecos();
        int[] selected = tblEnderecos.getSelectedRows();
        List<Endereco> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {

            selected[idx] = tblEnderecos.convertRowIndexToModel(selected[idx]);

            int count = 0;
            Iterator<Endereco> iter = enderecos.iterator();
            while (count++ < selected[idx]) {
                iter.next();
            }
            Endereco endereco = iter.next();
            toRemove.add(endereco);
            entityManager.remove(endereco);
        }
        enderecos.removeAll(toRemove);
        tblClientes.clearSelection();
        tblClientes.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_btnExcluirEnderecoActionPerformed

    private void btnNovoEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoEnderecoActionPerformed
        int index = tblClientes.getSelectedRow();
        Cliente cliente = list.get(tblClientes.convertRowIndexToModel(index));
        Collection<Endereco> enderecos = cliente.getEnderecos();
        if (enderecos == null) {
            enderecos = new LinkedList<>();
            cliente.setEnderecos((List) enderecos);
        }
        Endereco endereco = new Endereco();
        entityManager.persist(endereco);
        endereco.setCliente(cliente);
        enderecos.add(endereco);
        tblClientes.clearSelection();
        tblClientes.setRowSelectionInterval(index, index);
        int row = enderecos.size() - 1;
        tblEnderecos.setRowSelectionInterval(row, row);
        tblEnderecos.scrollRectToVisible(tblEnderecos.getCellRect(row, 0, true));

        ClienteEnderecoEditView enderecoEditView = new ClienteEnderecoEditView(null, true);
        enderecoEditView.setRegistroAtual(endereco);
        enderecoEditView.setVisible(true);

        if (enderecoEditView.isConfirmaEndereco()) {
            btnConfirmarCliente.doClick();
        } else {
            btnCancelarCliente.doClick();
        }
    }//GEN-LAST:event_btnNovoEnderecoActionPerformed

    @SuppressWarnings("unchecked")
    private void btnCancelarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarClienteActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }//GEN-LAST:event_btnCancelarClienteActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        int[] selected = tblClientes.getSelectedRows();
        List<Cliente> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            Cliente cliente = list.get(tblClientes.convertRowIndexToModel(selected[idx]));
            toRemove.add(cliente);
            entityManager.remove(cliente);
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void btnNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoClienteActionPerformed

        Cliente cliente = new Cliente();
        entityManager.persist(cliente);
        list.add(cliente);
        int row = list.size() - 1;
        tblClientes.setRowSelectionInterval(row, row);
        tblClientes.scrollRectToVisible(tblClientes.getCellRect(row, 0, true));

        ClienteEditView clienteEditView = new ClienteEditView(null, true);
        clienteEditView.setRegistroAtual(cliente);
        clienteEditView.setVisible(true);

        if (clienteEditView.isConfirmaCliente()) {
            btnConfirmarCliente.doClick();
        } else {
            btnCancelarCliente.doClick();
        }
    }//GEN-LAST:event_btnNovoClienteActionPerformed

    private void btnConfirmarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarClienteActionPerformed
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            entityManager.getTransaction().begin();
            List<Cliente> merged = new ArrayList<>(list.size());
            for (Cliente cliente : list) {
                merged.add(entityManager.merge(cliente));
            }
            list.clear();
            list.addAll(merged);
        }
    }//GEN-LAST:event_btnConfirmarClienteActionPerformed

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        int index = tblClientes.getSelectedRow();
        Cliente cliente = list.get(tblClientes.convertRowIndexToModel(index));

        ClienteEditView clienteEditView = new ClienteEditView(null, true);
        clienteEditView.setRegistroAtual(cliente);
        clienteEditView.setVisible(true);

        if (clienteEditView.isConfirmaCliente()) {
            btnConfirmarCliente.doClick();
        } else {
            btnCancelarCliente.doClick();
        }
    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void btnEditarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEnderecoActionPerformed
        int index = tblClientes.getSelectedRow();
        Cliente cliente = list.get(tblClientes.convertRowIndexToModel(index));
        Collection<Endereco> enderecos = cliente.getEnderecos();
        int selected = tblEnderecos.getSelectedRow();

        int count = 0;
        Iterator<Endereco> iter = enderecos.iterator();
        while (count++ < selected) {
            iter.next();
        }
        Endereco endereco = iter.next();

        ClienteEnderecoEditView enderecoEditView = new ClienteEnderecoEditView(null, true);
        enderecoEditView.setRegistroAtual(endereco);
        enderecoEditView.setVisible(true);

        if (enderecoEditView.isConfirmaEndereco()) {
            btnConfirmarCliente.doClick();
        } else {
            btnCancelarCliente.doClick();
        }
    }//GEN-LAST:event_btnEditarEnderecoActionPerformed

    private void btnNovoTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoTelefoneActionPerformed
        int index = tblClientes.getSelectedRow();
        Cliente cliente = list.get(tblClientes.convertRowIndexToModel(index));
        Collection<Telefone> telefones = cliente.getTelefones();
        if (telefones == null) {
            telefones = new LinkedList<>();
            cliente.setTelefones((List) telefones);
        }
        Telefone telefone = new Telefone();
        entityManager.persist(telefone);
        telefone.setCliente(cliente);
        telefones.add(telefone);
        tblClientes.clearSelection();
        tblClientes.setRowSelectionInterval(index, index);
        int row = telefones.size() - 1;
        tblTelefones.setRowSelectionInterval(row, row);
        tblTelefones.scrollRectToVisible(tblTelefones.getCellRect(row, 0, true));

        ClienteTelefoneEditView telefoneEditView = new ClienteTelefoneEditView(null, true);
        telefoneEditView.setRegistroAtual(telefone);
        telefoneEditView.setVisible(true);

        if (telefoneEditView.isConfirmaTelefone()) {
            btnConfirmarCliente.doClick();
        } else {
            btnCancelarCliente.doClick();
        }
    }//GEN-LAST:event_btnNovoTelefoneActionPerformed

    private void btnEditarTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarTelefoneActionPerformed
        int index = tblClientes.getSelectedRow();
        Cliente cliente = list.get(tblClientes.convertRowIndexToModel(index));
        Collection<Telefone> telefones = cliente.getTelefones();
        int selected = tblTelefones.getSelectedRow();

        int count = 0;
        Iterator<Telefone> iter = telefones.iterator();
        while (count++ < selected) {
            iter.next();
        }
        Telefone telefone = iter.next();

        ClienteTelefoneEditView telefoneEditView = new ClienteTelefoneEditView(null, true);
        telefoneEditView.setRegistroAtual(telefone);
        telefoneEditView.setVisible(true);

        if (telefoneEditView.isConfirmaTelefone()) {
            btnConfirmarCliente.doClick();
        } else {
            btnCancelarCliente.doClick();
        }
    }//GEN-LAST:event_btnEditarTelefoneActionPerformed

    private void btnExcluirTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirTelefoneActionPerformed
        int index = tblClientes.getSelectedRow();
        Cliente cliente = list.get(tblClientes.convertRowIndexToModel(index));
        Collection<Telefone> telefones = cliente.getTelefones();
        int[] selected = tblTelefones.getSelectedRows();
        List<Telefone> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {

            selected[idx] = tblTelefones.convertRowIndexToModel(selected[idx]);

            int count = 0;
            Iterator<Telefone> iter = telefones.iterator();
            while (count++ < selected[idx]) {
                iter.next();
            }
            Telefone telefone = iter.next();
            toRemove.add(telefone);
            entityManager.remove(telefone);
        }
        telefones.removeAll(toRemove);
        tblClientes.clearSelection();
        tblClientes.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_btnExcluirTelefoneActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarCliente;
    private javax.swing.JButton btnConfirmarCliente;
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnEditarEndereco;
    private javax.swing.JButton btnEditarTelefone;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.JButton btnExcluirEndereco;
    private javax.swing.JButton btnExcluirTelefone;
    private javax.swing.JButton btnNovoCliente;
    private javax.swing.JButton btnNovoEndereco;
    private javax.swing.JButton btnNovoTelefone;
    private javax.swing.JScrollPane detailScrollPane1;
    private javax.swing.JScrollPane detailScrollPane2;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JPanel jPanel1;
    private java.util.List<br.com.siscom.bean.Cliente> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JPanel pnlListaClientes;
    private javax.swing.JPanel pnlListaEnderecos;
    private javax.swing.JPanel pnlListaTelefones;
    private javax.persistence.Query query;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTable tblEnderecos;
    private javax.swing.JTable tblTelefones;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(final String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new ClienteView());
                //frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
                if (args.length > 0) {
                    frame.setTitle(args[0]);
                }
            }
        });
    }

}
